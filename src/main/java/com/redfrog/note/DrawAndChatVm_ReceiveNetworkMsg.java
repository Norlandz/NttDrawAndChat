package com.redfrog.note;

import com.redfrog.note.session.StaticValueDebug;
import com.redfrog.note.session.WindowSession;
import com.redfrog.note.session.WindowSessionExecutor;
import com.redfrog.note.util.JavafxUtil;

import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;

//_

//_
//___________________________________________________________
//_
//_______________________________________________________________________________________________________
//____________________________________________
//______________________________________________
//________________________________________________________________________________________________________________________
//_________________________________________________________________________________________________________________________
//______________________________________
//________________________________________________________________________________
//_______________________________________________________________________
//_________________________________________________________________________________________________
//_______________________________________________________________________________________________
//_____
//___________________
//_____________________________
//________________________________________
//_______________
//___________________________________________________________________________________________
//__________________________________________________________________________________________________________________________________________________________________________
//______________________________________________________________________________________
//_______________________________________________________________
//_______________________________________
//_______________________________________________________________
//_____
//_________________________________
//_______________________________________
//_______________________________________
//_____
//________________________________________________________________________________________________________
//_____________________________________________
//______________________________________________
//__________________________________________
//________________
//____________________________________________________________________________________________________________________________________________________________________________________________________
//______________________________________________
//__________________________________________
//________________
//______________________________________________________________________________________________________________
//_____
//________________
//_____________________
//______________________________________________________
//________________
//__________________________________________________________________________________________________________________________
//______________
//___________________
//___________________________________________________
//______________
//_____
//____________
//_____
//__________
//_____
//_________________________________________
//________
//_
//_________________________________________________
//______________________________________________________________________
//_
//____________
//__________________________________________
//________________________________________________
//_________________________________________________________________________________
//________________________________________________
//_
//________________________________________
//_________________________________________________________
//__________________________________________
//_
//__________________________________________________________
//___________________________________________________________________________________________________________________________________
//_____________________________________________________________________________________
//___________________________________________________
//_____________________________________________
//_______________________________________________________________
//__________________________________
//_________________________
//_
//_____________
//_________________________________________
//______________________________________________
//__________________________________________________________________________________________
//________________________
//______________
//______________________
//_
//___________
//_________________________________________
//______________________________________
//___________________________________________________________________________________
//________________
//______________
//______________________
//_
//_______________________________________________________________________________________________________
//____________________________________________________________
//________________________________________________
//__________
//__________________
//___________________________________________________________
//______________________________
//_
//_________________________________________________________________
//___________________________________________________________________
//________________________________________________________________________________
//_
//__________________________________________________________________________
//_
//________________
//___________________________________
//_____________________________________________
//_________________________________
//____________
//____
//_
//_______________________________________________
//_____________________________________
//________________________________________
//______________________
//________
//_
//__

public class DrawAndChatVm_ReceiveNetworkMsg implements WindowSessionExecutor {

  private final WindowSession windowSession_corr;
  //______________________________________________________________________

  public DrawAndChatVm_ReceiveNetworkMsg(WindowSession windowSession_corr) {
    this.windowSession_corr = windowSession_corr;
    //_________________________________________________________________________________________
  }

  @Override
  public WindowSession getWindowSession() { return windowSession_corr; }

  //___________________________________________________________________________________________________________

  //_______________________

  public void initListenNetworkMsg(Stage stage) {
    //_________

    //_____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
    AnchorPane pane_JavafxRoot = new AnchorPane();
    //_______________________________________________________________
    //_____________________________________________________________
    windowSession_corr.pane_JavafxRoot = pane_JavafxRoot;

    stage.setTitle("2 " + windowSession_corr.sessionNewOrLoadOrReceive + " :: " + windowSession_corr.dbOccupation.dbName);
    stage.setScene(new Scene(pane_JavafxRoot, 800, 500));
    windowSession_corr.listen_ConfirmClose(stage);
    stage.show();

    //_________

    if (!StaticValueDebug.det_DisableReceiveNetworkMsg_Kafka) {
      windowSession_corr.drawAndChatVm.nodeReceiver_EventListener.listen_forGeneralNodeEvent();
    }
    else {
      System.out.println(">> init_Session() :: det_DisableReceiveNetworkMsg_Kafka :: " + StaticValueDebug.det_DisableReceiveNetworkMsg_Kafka);
    }

    //_________

    //_____________
    //____________________________________
    //_______________________________________________________________
    //_______________
    //_______________________________
    //________________________________________________________________________________
    //____________________________________________
    //________________________________
    //___________
    //_________
    //_________________________________
    //___________________________________________________________________________________________________________________________________
    //_____________________________________________________
    //___________
    //_________
    //_________________
  }

}